<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="CastHelper" Id="{964cb584-8aec-41e4-a434-2f8aaed1cefb}" SpecialFunc="None">
    <Declaration><![CDATA[(*
To pass objects between List (base) and List_X_ (derived) we need to cast types. Since these castings are used in several methods, they are all gathered here is this FB.
AddressToI_Equatable is general for all lists.
I_EquatableToX, ListToList_X & ObjectToX (X here indicates your desired object type) should be implemented foreach type that you want to create a list of.
In this project for instance I created Person FB, then a List_Person_ and I_EquatableToPerson, ListToList_Person & ObjectToPerson. You can copy these methods and rename any "Person" to the name of your FB.
*)
FUNCTION_BLOCK FINAL CastHelper
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddressToI_Equatable" Id="{04a200d1-6848-4691-a87e-9b5aec91cc02}">
      <Declaration><![CDATA[METHOD AddressToI_Equatable : POINTER TO I_Equatable
VAR_IN_OUT
	item : LWORD;
END_VAR
VAR
    _pointerToCastedItem : POINTER TO I_Equatable;
    _pointerToPointer : POINTER TO LWORD := ADR(_pointerToCastedItem);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_pointerToPointer^ := item;
AddressToI_Equatable := _pointerToCastedItem;]]></ST>
      </Implementation>
    </Method>
    <Method Name="I_EquatableToPerson" Id="{d6fff3b8-e6c6-4c30-bae0-ed4bc59c660e}">
      <Declaration><![CDATA[METHOD I_EquatableToPerson : POINTER TO Person
VAR_IN_OUT
	item : I_Equatable;
END_VAR
VAR
    _pointerToCastedItem : POINTER TO Person;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[__QUERYPOINTER(item, _pointerToCastedItem);
I_EquatableToPerson := _pointerToCastedItem;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ListToList_Person_" Id="{b199b668-170e-449a-9582-9aa71a6c3c5f}">
      <Declaration><![CDATA[METHOD PUBLIC ListToList_Person_ : List_Person_
VAR_INPUT
    list : List;
END_VAR
VAR
    i : INT;
    lastIndex : INT;
    _currentItem : POINTER TO Object;
    _result : List_Person_;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF list.GetCount() > 0 THEN
    lastIndex := list.GetCount()-1;
    IF lastIndex >= 0 THEN
        FOR i:=0 TO lastIndex DO
            _currentItem := list.GetItemAsIEquatable(i);
            _result.AddItem(GVL.CastHelper.ObjectToPerson(_currentItem)^);
        END_FOR
    END_IF
END_IF

ListToList_Person_ := _result;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ObjectToPerson" Id="{fe8f2cd3-888e-4fdf-88ed-69d12b097fa0}">
      <Declaration><![CDATA[METHOD ObjectToPerson : POINTER TO Person
VAR_IN_OUT
	item : POINTER TO Object;
END_VAR
VAR
    _pointerToCastedItem : POINTER TO Person;
    _pointerToPointer : POINTER TO LWORD := ADR(_pointerToCastedItem);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_pointerToPointer^ := item;
ObjectToPerson := _pointerToCastedItem;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>